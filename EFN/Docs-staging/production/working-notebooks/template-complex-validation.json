{
  "metadata": {
    "notebook_version": "1.0.0",
    "created": "2025-01-07",
    "name": "demo-complex",
    "description": "Complex form with validation and conditional logic"
  },
  "ui-specification": {
    "fields": {
      "assessment-id": {
        "component-namespace": "faims-custom",
        "component-name": "TemplatedStringField",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "name": "assessment-id",
          "label": "Assessment ID",
          "template": "ASSESS-{{_CREATED_DATE}}-{{_USER}}-{{_INCREMENT}}",
          "required": true
        }
      },
      "assessor-name": {
        "component-namespace": "faims-custom",
        "component-name": "FAIMSTextField",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "name": "assessor-name",
          "label": "Assessor Name",
          "required": true,
          "inputProps": {
            "maxLength": 100
          }
        },
        "validationSchema": [
          [
            "yup.string"
          ],
          [
            "yup.required",
            "Assessor name is required"
          ],
          [
            "yup.min",
            2,
            "Name must be at least 2 characters"
          ]
        ]
      },
      "assessment-date": {
        "component-namespace": "faims-custom",
        "component-name": "DateTimeNow",
        "type-returned": "faims-core::DateTime",
        "component-parameters": {
          "name": "assessment-date",
          "label": "Assessment Date/Time"
        }
      },
      "location-type": {
        "component-namespace": "faims-custom",
        "component-name": "RadioGroup",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "name": "location-type",
          "label": "Location Type",
          "options": [
            {
              "value": "urban",
              "label": "Urban"
            },
            {
              "value": "rural",
              "label": "Rural"
            },
            {
              "value": "remote",
              "label": "Remote"
            }
          ],
          "required": true,
          "logic_select": true
        }
      },
      "urban-density": {
        "component-namespace": "faims-custom",
        "component-name": "Select",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "name": "urban-density",
          "label": "Urban Density",
          "options": [
            {
              "value": "high",
              "label": "High Density"
            },
            {
              "value": "medium",
              "label": "Medium Density"
            },
            {
              "value": "low",
              "label": "Low Density"
            }
          ]
        },
        "is-logic": {
          "if": "location-type",
          "==": "urban"
        }
      },
      "access-difficulty": {
        "component-namespace": "faims-custom",
        "component-name": "RadioGroup",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "name": "access-difficulty",
          "label": "Access Difficulty",
          "options": [
            {
              "value": "easy",
              "label": "Easy"
            },
            {
              "value": "moderate",
              "label": "Moderate"
            },
            {
              "value": "difficult",
              "label": "Difficult"
            }
          ]
        },
        "is-logic": {
          "if": "location-type",
          "==": "remote"
        }
      },
      "condition-score": {
        "component-namespace": "formik-material-ui",
        "component-name": "TextField",
        "type-returned": "faims-core::Number",
        "component-parameters": {
          "name": "condition-score",
          "label": "Condition Score (0-100)",
          "InputProps": {
            "type": "number"
          },
          "min": 0,
          "max": 100,
          "required": true,
          "logic_select": true
        },
        "validationSchema": [
          [
            "yup.number"
          ],
          [
            "yup.required",
            "Condition score is required"
          ],
          [
            "yup.min",
            0,
            "Score cannot be negative"
          ],
          [
            "yup.max",
            100,
            "Score cannot exceed 100"
          ]
        ]
      },
      "requires-intervention": {
        "component-namespace": "faims-custom",
        "component-name": "Checkbox",
        "type-returned": "faims-core::Bool",
        "component-parameters": {
          "name": "requires-intervention",
          "label": "Requires immediate intervention"
        },
        "is-logic": {
          "if": "condition-score",
          "<": 50
        }
      },
      "intervention-type": {
        "component-namespace": "faims-custom",
        "component-name": "MultiSelect",
        "type-returned": "faims-core::Array",
        "component-parameters": {
          "name": "intervention-type",
          "label": "Intervention Types Required",
          "options": [
            {
              "value": "structural",
              "label": "Structural Repair"
            },
            {
              "value": "safety",
              "label": "Safety Measures"
            },
            {
              "value": "environmental",
              "label": "Environmental Protection"
            },
            {
              "value": "monitoring",
              "label": "Ongoing Monitoring"
            }
          ]
        },
        "is-logic": {
          "if": "requires-intervention",
          "==": true
        }
      },
      "priority-level": {
        "component-namespace": "faims-custom",
        "component-name": "RadioGroup",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "name": "priority-level",
          "label": "Priority Level",
          "options": [
            {
              "value": "urgent",
              "label": "Urgent (24 hours)"
            },
            {
              "value": "high",
              "label": "High (1 week)"
            },
            {
              "value": "medium",
              "label": "Medium (1 month)"
            },
            {
              "value": "low",
              "label": "Low (3 months)"
            }
          ],
          "required": true
        },
        "is-logic": {
          "if": "requires-intervention",
          "==": true
        }
      },
      "hazards-present": {
        "component-namespace": "faims-custom",
        "component-name": "MultiSelect",
        "type-returned": "faims-core::Array",
        "component-parameters": {
          "name": "hazards-present",
          "label": "Hazards Present",
          "options": [
            {
              "value": "none",
              "label": "None Identified"
            },
            {
              "value": "structural",
              "label": "Structural Instability"
            },
            {
              "value": "chemical",
              "label": "Chemical Hazard"
            },
            {
              "value": "biological",
              "label": "Biological Hazard"
            },
            {
              "value": "electrical",
              "label": "Electrical Hazard"
            },
            {
              "value": "other",
              "label": "Other"
            }
          ],
          "expandedChecklist": true,
          "exclusiveOptions": [
            "none"
          ]
        }
      },
      "hazard-details": {
        "component-namespace": "faims-custom",
        "component-name": "MultipleTextField",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "name": "hazard-details",
          "label": "Hazard Details",
          "helperText": "Describe the hazards in detail",
          "multiline": true,
          "rows": 4,
          "required": true
        },
        "is-logic": {
          "if": "hazards-present",
          "not-includes": "none"
        },
        "validationSchema": [
          [
            "yup.string"
          ],
          [
            "yup.required",
            "Hazard details required when hazards present"
          ],
          [
            "yup.min",
            20,
            "Please provide at least 20 characters of detail"
          ]
        ]
      },
      "measurements-taken": {
        "component-namespace": "faims-custom",
        "component-name": "Checkbox",
        "type-returned": "faims-core::Bool",
        "component-parameters": {
          "name": "measurements-taken",
          "label": "Detailed measurements recorded",
          "logic_select": true
        }
      },
      "length-m": {
        "component-namespace": "formik-material-ui",
        "component-name": "TextField",
        "type-returned": "faims-core::Number",
        "component-parameters": {
          "name": "length-m",
          "label": "Length (meters)",
          "InputProps": {
            "type": "number",
            "step": 0.01
          },
          "min": 0
        },
        "is-logic": {
          "if": "measurements-taken",
          "==": true
        }
      },
      "width-m": {
        "component-namespace": "formik-material-ui",
        "component-name": "TextField",
        "type-returned": "faims-core::Number",
        "component-parameters": {
          "name": "width-m",
          "label": "Width (meters)",
          "InputProps": {
            "type": "number",
            "step": 0.01
          },
          "min": 0
        },
        "is-logic": {
          "if": "measurements-taken",
          "==": true
        }
      },
      "height-m": {
        "component-namespace": "formik-material-ui",
        "component-name": "TextField",
        "type-returned": "faims-core::Number",
        "component-parameters": {
          "name": "height-m",
          "label": "Height (meters)",
          "InputProps": {
            "type": "number",
            "step": 0.01
          },
          "min": 0
        },
        "is-logic": {
          "if": "measurements-taken",
          "==": true
        }
      },
      "weather-conditions": {
        "component-namespace": "faims-custom",
        "component-name": "Select",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "name": "weather-conditions",
          "label": "Weather During Assessment",
          "options": [
            {
              "value": "clear",
              "label": "Clear"
            },
            {
              "value": "cloudy",
              "label": "Cloudy"
            },
            {
              "value": "rain",
              "label": "Rain"
            },
            {
              "value": "storm",
              "label": "Storm"
            },
            {
              "value": "snow",
              "label": "Snow"
            }
          ],
          "required": true
        }
      },
      "visibility": {
        "component-namespace": "faims-custom",
        "component-name": "RadioGroup",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "name": "visibility",
          "label": "Visibility",
          "options": [
            {
              "value": "excellent",
              "label": "Excellent (>10km)"
            },
            {
              "value": "good",
              "label": "Good (5-10km)"
            },
            {
              "value": "moderate",
              "label": "Moderate (1-5km)"
            },
            {
              "value": "poor",
              "label": "Poor (<1km)"
            }
          ],
          "required": true
        }
      },
      "follow-up-required": {
        "component-namespace": "faims-custom",
        "component-name": "Checkbox",
        "type-returned": "faims-core::Bool",
        "component-parameters": {
          "name": "follow-up-required",
          "label": "Follow-up assessment required"
        }
      },
      "assessment-notes": {
        "component-namespace": "faims-custom",
        "component-name": "MultipleTextField",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "name": "assessment-notes",
          "label": "Assessment Notes",
          "helperText": "Any additional observations or recommendations",
          "multiline": true,
          "rows": 5
        }
      }
    },
    "fviews": {
      "identification": {
        "fields": [
          "assessment-id",
          "assessor-name",
          "assessment-date"
        ],
        "label": "Identification",
        "uidesign": "form"
      },
      "location": {
        "fields": [
          "location-type",
          "urban-density",
          "access-difficulty"
        ],
        "label": "Location Details",
        "uidesign": "form"
      },
      "condition": {
        "fields": [
          "condition-score",
          "requires-intervention",
          "intervention-type",
          "priority-level"
        ],
        "label": "Condition Assessment",
        "uidesign": "form"
      },
      "hazards": {
        "fields": [
          "hazards-present",
          "hazard-details"
        ],
        "label": "Hazard Assessment",
        "uidesign": "form"
      },
      "measurements": {
        "fields": [
          "measurements-taken",
          "length-m",
          "width-m",
          "height-m"
        ],
        "label": "Measurements",
        "uidesign": "form"
      },
      "environment": {
        "fields": [
          "weather-conditions",
          "visibility"
        ],
        "label": "Environmental Conditions",
        "uidesign": "form"
      },
      "summary": {
        "fields": [
          "follow-up-required",
          "assessment-notes"
        ],
        "label": "Summary",
        "uidesign": "form"
      }
    },
    "viewsets": {
      "complex-assessment": {
        "views": [
          "identification",
          "location",
          "condition",
          "hazards",
          "measurements",
          "environment",
          "summary"
        ],
        "label": "Complex Assessment",
        "publishButtonBehaviour": "always"
      }
    },
    "visible_types": [
      "complex-assessment"
    ]
  }
}